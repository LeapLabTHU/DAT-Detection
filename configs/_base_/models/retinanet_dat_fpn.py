# model settings
model = dict(
    type='RetinaNet',
    backbone=dict(
        type='DAT',
        img_size=224, patch_size=4, num_classes=1000, expansion=4,
        dim_stem=96, dims=[96, 192, 384, 768], depths=[2, 2, 6, 2], 
        heads=[3, 6, 12, 24], heads_q=[6, 12, 24, 48],
        window_sizes=[7, 7, 7, 7],
        drop_rate=0.0, attn_drop_rate=0.0, drop_path_rate=0.0, 
        strides=[-1,-1,-1,-1],
        offset_range_factor=[1, 2, 3, 4],
        local_orf=[-1, -1, -1, -1],
        local_kv_sizes=[-1, -1, -1, -1],
        offset_pes=[False, False, False, False],
        stage_spec=[['L', 'D'], ['L', 'D'], ['L', 'D', 'L', 'D', 'L', 'D'], ['L', 'D']], 
        groups=[-1, -1, 3, 6],
        use_pes=[False, False, False, False], 
        dwc_pes=[False, False, False, False],
        sr_ratios=[8, 4, 2, 1], 
        lower_lr_kvs={},
        fixed_pes=[False, False, False, False],
        no_offs=[False, False, False, False],
        ns_per_pts=[4, 4, 4, 4],
        use_dwc_mlps=[False, False, False, False],
        use_conv_patches=False,
        ksizes=[9, 7, 5, 3],
        ksize_qnas=[3, 3, 3, 3],
        nqs=[2, 2, 2, 2],
        qna_activation='exp',
        deform_groups=[0, 0, 0, 0],
        nat_ksizes=[3,3,3,3],
        layer_scale_values=[-1,-1,-1,-1],
        use_lpus=[False, False, False, False],
        use_cmt_mlps=[False, False, False, False],
        out_indices=(1, 2, 3),
        use_checkpoint=True
    ),
    neck=dict(
        type='FPN',
        in_channels=[96, 192, 384, 768],
        out_channels=256,
        start_level=1,
        add_extra_convs='on_input',
        num_outs=5),
    bbox_head=dict(
        type='RetinaHead',
        num_classes=80,
        in_channels=256,
        stacked_convs=4,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            octave_base_scale=4,
            scales_per_octave=3,
            ratios=[0.5, 1.0, 2.0],
            strides=[8, 16, 32, 64, 128]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[.0, .0, .0, .0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    # model training and testing settings
    train_cfg=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.4,
            min_pos_iou=0,
            ignore_iof_thr=-1),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=1000,
        min_bbox_size=0,
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
